package xjsnark.linearSystemOfEquationsVerification;

/*Generated by MPS */

import java.math.BigInteger;

public class Util {

  public static BigInteger[] solve(BigInteger[] a1, BigInteger[] a2, BigInteger[] b, BigInteger prime) {

    // Note that the following will happen outside the circuit, so no much focus on efficiency  
    BigInteger d = a1[0].multiply(a2[1]).subtract(a2[0].multiply(a1[1])).mod(prime);
    BigInteger dInv = d.modInverse(prime);
    BigInteger d1 = b[0].multiply(a2[1]).subtract(b[1].multiply(a1[1])).mod(prime);
    BigInteger d2 = a1[0].multiply(b[1]).subtract(a2[0].multiply(b[0])).mod(prime);
    BigInteger s0 = d1.multiply(dInv).mod(prime);
    BigInteger s1 = d2.multiply(dInv).mod(prime);
    return new BigInteger[]{s0, s1};
  }

}
